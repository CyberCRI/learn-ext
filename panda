#!/usr/bin/env bash
_VERSION='0.1.1'
_ME=$(basename "${0}")
BANNER=$(cat <<HEREDOC
iLearn Ext Panda! (@,@)

Usage:
  ${_ME} <command> [--command-options] [<arguments>]
  ${_ME} -?
  ${_ME} --version

Options:
  -?  Display this help information.
  --version  Display version information.

Version: ${_VERSION}

Help:
  ${_ME} help [<command>]

HEREDOC
)

source ./tools/pandalib.sh

# Ensure that webpack binaries are in path too.
PATH="$PATH:./node_modules/.bin"

# ... and that the local .env file is also sourced.
source ./.env

__sigint () {
  printf '\n'
  _abort 'Ended all sessions'
}
trap __sigint SIGINT

#================================================
desc 'dev:docs' << BOOP
Usage:
  ${_ME} docz

Description:
  Start Docz Server.
BOOP
dev:docs () {
  _info 'Start Docz Server'
  docz dev
}

dev:watch () {
  gen:webfonts
  webpack --config webpack.dev.js --watch
}

dev:server () {
  _info 'Starting dev-server on http://localhost:9889'
  gen:webfonts
  webpack-dev-server --config webpack.dev.js --hot
}

dev:build () {
  _info 'Building [target dev]'
  gen:webfonts
  webpack --config webpack.dev.js
}

dev:webext () {
  export FLAGS_VERBOSE='yes'
  web-ext run
  _info 'Closing Firefox'
}

desc 'gen:webfonts' <<BOOP
Usage:
  ${_ME} gen:webfonts

Description:
  Generates fonts.css in src/styles with the fonts found in assets/fonts.
BOOP
gen:webfonts () {
  python tools/discover-fonts.py
}

release:bump () {
  # Bump the extension version!
  _info 'Bumping version'
}

release:pack () {
  _info 'Packing Extension'
  web-ext lint
  _info '[i] Building'
  web-ext build --overwrite-dest
}

release:sign () {
  _info '[!] Signing Extension'
  web-ext sign \
    --api-key $DEV_WEBEXT_API_KEY \
    --api-secret $DEV_WEBEXT_API_SECRET \
    --id $DEV_WEBEXT_EXTENSION_ID
}

release:build () {
  _info '[!] Compiling using Production flag'
  gen:webfonts
  webpack --config webpack.prod.js
}

release () {
  export FLAGS_VERBOSE='no'
  _info '[!!] Building the release version.'

  release:build
  release:pack
  release:sign
  _info '-> Done!'
}

#================================================
_main
